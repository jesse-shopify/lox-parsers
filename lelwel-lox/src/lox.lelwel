// Lox language grammar for Lelwel parser generator

// Token definitions (string literals only)
token TRUE='true';
token FALSE='false';
token NIL='nil';
token PRINT='print';
token VAR='var';
token AND='and';
token OR='or';

// Operators
token PLUS='+';
token MINUS='-';
token STAR='*';
token SLASH='/';
token BANG='!';
token BANG_EQUAL='!=';
token EQUAL='=';
token EQUAL_EQUAL='==';
token GREATER='>';
token GREATER_EQUAL='>=';
token LESS='<';
token LESS_EQUAL='<=';

// Delimiters
token LEFT_PAREN='(';
token RIGHT_PAREN=')';
token SEMICOLON=';';

// Literals (these need to be handled specially)
token NUMBER;
token STRING;
token IDENTIFIER;

// Start rule
start program;

// Grammar rules
program: statement*;

statement:
    print_stmt
    | var_declaration
    | expression_stmt
;

print_stmt: PRINT expression SEMICOLON;

var_declaration: VAR IDENTIFIER [EQUAL expression] SEMICOLON;

expression_stmt: expression SEMICOLON;

expression: assignment;

assignment:
    logical_or [EQUAL assignment]
;

logical_or:
    logical_and [OR logical_or]
;

logical_and:
    equality [AND logical_and]
;

equality:
    comparison [(BANG_EQUAL | EQUAL_EQUAL) equality]
;

comparison:
    term [(GREATER | GREATER_EQUAL | LESS | LESS_EQUAL) comparison]
;

term:
    factor [(PLUS | MINUS) term]
;

factor:
    unary [(STAR | SLASH) factor]
;

unary:
    (BANG | MINUS) unary
    | primary
;

primary:
    TRUE
    | FALSE
    | NIL
    | NUMBER
    | STRING
    | IDENTIFIER
    | LEFT_PAREN expression RIGHT_PAREN
;